{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Cursos\\\\Native\\\\Restaurante\\\\restaurantcliente\\\\src\\\\components\\\\ui\\\\Orden.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport { FirebaseContext } from '../../firebase';\n\nconst Orden = ({\n  orden\n}) => {\n  _s();\n\n  const [tiempoentrega, guardarTiempoEntrega] = useState(0); // Context de firebase\n\n  const {\n    firebase\n  } = useContext(FirebaseContext); // define el tiempo de entrega en tiempo real\n\n  const definirTiempo = id => {\n    try {\n      firebase.db.collection('ordenes').doc(id).update({\n        tiempoentrega\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  }; // Completa el estado de una orden\n\n\n  const completarOrden = id => {\n    try {\n      firebase.db.collection('ordenes').doc(id).update({\n        completado: true\n      });\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"sm:w-1/2 lg:w-1/3 px-2 mb-4\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"p-3 shadow-md bg-white\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        className: \"text-yellow-600 text-lg font-bold\",\n        children: [\" \", orden.id, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), orden.orden.map(platillos => /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-600\",\n        children: [\" \", platillos.cantidad, \" \", platillos.nombre, \" \"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 21\n      }, this)), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700 font-bold\",\n        children: [\"Total a Pagar: $ \", orden.total]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), orden.tiempoentrega === 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"mb-4\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"block text-gray-700 text-sm font-bold mb-2\",\n          children: \"Tiempo de Entrega\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"number\",\n          className: \"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline  \",\n          min: \"1\",\n          max: \"20\",\n          placeholder: \"20\",\n          value: tiempoentrega,\n          onChange: e => guardarTiempoEntrega(parseInt(e.target.value))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          onClick: () => definirTiempo(orden.id),\n          type: \"submit\",\n          className: \"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\",\n          children: \"Definir Tiempo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 21\n      }, this), orden.tiempoentrega > 0 && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-gray-700\",\n        children: [\"Tiempo de Entrega:\", /*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"font-bold\",\n          children: [\" \", orden.tiempoentrega, \" Minutos\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 21\n      }, this), !orden.completado && orden.tiempoentrega > 0 && /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        className: \"bg-blue-800 hover:bg-blue-700 w-full mt-5 p-2 text-white uppercase font-bold\",\n        onClick: () => completarOrden(orden.id),\n        children: \"Marcar como lista\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 20\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Orden, \"pyZy8+k2iv0vlhE9BKvKigygWr0=\");\n\n_c = Orden;\nexport default Orden;\n\nvar _c;\n\n$RefreshReg$(_c, \"Orden\");","map":{"version":3,"sources":["C:/Cursos/Native/Restaurante/restaurantcliente/src/components/ui/Orden.js"],"names":["React","useState","useContext","FirebaseContext","Orden","orden","tiempoentrega","guardarTiempoEntrega","firebase","definirTiempo","id","db","collection","doc","update","error","console","log","completarOrden","completado","map","platillos","cantidad","nombre","total","e","parseInt","target","value"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport { FirebaseContext } from '../../firebase';\r\n\r\nconst Orden = ({ orden }) => {\r\n\r\n    const [tiempoentrega, guardarTiempoEntrega] = useState(0);\r\n\r\n    // Context de firebase\r\n    const { firebase } = useContext(FirebaseContext);\r\n\r\n    // define el tiempo de entrega en tiempo real\r\n    const definirTiempo = id => {\r\n        try {\r\n            firebase.db.collection('ordenes')\r\n                .doc(id)\r\n                .update({\r\n                    tiempoentrega\r\n                })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    // Completa el estado de una orden\r\n    const completarOrden = id => {\r\n        try {\r\n            firebase.db.collection('ordenes')\r\n                .doc(id)\r\n                .update({\r\n                    completado: true\r\n                })\r\n        } catch (error) {\r\n            console.log(error);\r\n        }\r\n    }\r\n\r\n    return ( \r\n        <div className=\"sm:w-1/2 lg:w-1/3 px-2 mb-4\">\r\n            <div className=\"p-3 shadow-md bg-white\">\r\n                <h1 className=\"text-yellow-600 text-lg font-bold\"> {orden.id} </h1>\r\n                {orden.orden.map( platillos => (\r\n                    <p className=\"text-gray-600\"> {platillos.cantidad} {platillos.nombre} </p>\r\n                ) )}\r\n\r\n                <p className=\"text-gray-700 font-bold\">Total a Pagar: $ {orden.total}</p>\r\n\r\n                {orden.tiempoentrega === 0 && (\r\n                    <div className=\"mb-4\">\r\n                        <label className=\"block text-gray-700 text-sm font-bold mb-2\">\r\n                            Tiempo de Entrega\r\n                        </label>\r\n\r\n                        <input\r\n                            type=\"number\"\r\n                            className=\"shadow appearance-none border rounded w-full py-2 px-3 text-gray-700 leading-tight focus:outline-none focus:shadow-outline  \"\r\n                            min=\"1\"\r\n                            max=\"20\"\r\n                            placeholder=\"20\"\r\n                            value={tiempoentrega}\r\n                            onChange={ e => guardarTiempoEntrega( parseInt(e.target.value) ) }\r\n                        />\r\n\r\n                        <button\r\n                            onClick={ () => definirTiempo(orden.id) }\r\n                            type=\"submit\"\r\n                            className=\"bg-gray-800 hover:bg-gray-900 w-full mt-5 p-2 text-white uppercase font-bold\"\r\n                        >\r\n                            Definir Tiempo\r\n                        </button>\r\n                    </div>\r\n                )}\r\n\r\n                {orden.tiempoentrega > 0 && (\r\n                    <p className=\"text-gray-700\">Tiempo de Entrega:\r\n                        <span className=\"font-bold\"> {orden.tiempoentrega} Minutos</span>\r\n                    </p>\r\n                )}\r\n\r\n                { !orden.completado && orden.tiempoentrega > 0 && (\r\n                   <button\r\n                    type=\"button\"\r\n                    className=\"bg-blue-800 hover:bg-blue-700 w-full mt-5 p-2 text-white uppercase font-bold\"\r\n                    onClick={ () => completarOrden( orden.id )}\r\n                   >\r\n                       Marcar como lista\r\n                   </button>\r\n                ) }\r\n            </div>\r\n        </div>\r\n     );\r\n}\r\n \r\nexport default Orden;"]},"metadata":{},"sourceType":"module"}